/* MLton 20180207 */
/*   created this file on Tue Aug 14 16:27:00 2018. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (@MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    execute passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRedefineSpecialIds (default): false */
/*    elaborate allowRedefineSpecialIds (enabled): true */
/*    elaborate allowSpecifySpecialIds (default): false */
/*    elaborate allowSpecifySpecialIds (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveBind (default): warn */
/*    elaborate nonexhaustiveBind (enabled): true */
/*    elaborate nonexhaustiveExnBind (default): default */
/*    elaborate nonexhaustiveExnBind (enabled): true */
/*    elaborate redundantBind (default): warn */
/*    elaborate redundantBind (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate nonexhaustiveRaise (default): ignore */
/*    elaborate nonexhaustiveRaise (enabled): true */
/*    elaborate nonexhaustiveExnRaise (default): ignore */
/*    elaborate nonexhaustiveExnRaise (enabled): true */
/*    elaborate redundantRaise (default): warn */
/*    elaborate redundantRaise (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): ignore */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate valrecConstr (default): warn */
/*    elaborate valrecConstr (enabled): true */
/*    elaborate warnUnused (default): false */
/*    elaborate warnUnused (enabled): true */
/*    elaborate allowDoDecls (default): false */
/*    elaborate allowDoDecls (enabled): true */
/*    elaborate allowExtendedNumConsts (default): false */
/*    elaborate allowExtendedNumConsts (enabled): true */
/*    elaborate allowExtendedTextConsts (default): false */
/*    elaborate allowExtendedTextConsts (enabled): true */
/*    elaborate allowLineComments (default): false */
/*    elaborate allowLineComments (enabled): true */
/*    elaborate allowOptBar (default): false */
/*    elaborate allowOptBar (enabled): true */
/*    elaborate allowOptSemicolon (default): false */
/*    elaborate allowOptSemicolon (enabled): true */
/*    elaborate allowOrPats (default): false */
/*    elaborate allowOrPats (enabled): true */
/*    elaborate allowRecordPunExps (default): false */
/*    elaborate allowRecordPunExps (enabled): true */
/*    elaborate allowSigWithtype (default): false */
/*    elaborate allowSigWithtype (enabled): true */
/*    elaborate allowVectorExps (default): false */
/*    elaborate allowVectorExps (enabled): true */
/*    elaborate allowVectorPats (default): false */
/*    elaborate allowVectorPats (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: test */
/*    keep AST: false */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: true */
/*    lib dir: /usr/local/lib/mlton */
/*    lib target dir: /usr/local/lib/mlton/targets/self */
/*    loop ssa passes: 1 */
/*    loop ssa2 passes: 1 */
/*    loop unrolling limit: 150 */
/*    loop unswitching limit: 300 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optFuel: None */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show basis compact: false */
/*    show basis def: true */
/*    show basis flat: true */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: Darwin */
/*    type check: false */
/*    verbosity: Silent */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl _MLton_jumpToSML
.private_extern _MLton_jumpToSML
_MLton_jumpToSML:
	subq $0x48,%rsp
	movq %rbp,0x40(%rsp)
	movq %rbx,0x38(%rsp)
	movq %r12,0x30(%rsp)
	movq %r13,0x28(%rsp)
	movq %r14,0x20(%rsp)
	movq %r15,0x18(%rsp)
	movq _c_stackP(%rip),%rbx
	movq %rbx,0x10(%rsp)
	movq %rsp,_c_stackP(%rip)
	movq (_gcState+0x10)(%rip),%rbp
	movq (_gcState+0x0)(%rip),%r12
	jmp *%rdi
.p2align 0x4
.globl _Thread_returnToC
.private_extern _Thread_returnToC
_Thread_returnToC:
	movq _c_stackP(%rip),%rsp
	movq 0x10(%rsp),%rbx
	movq %rbx,_c_stackP(%rip)
	movq 0x18(%rsp),%r15
	movq 0x20(%rsp),%r14
	movq 0x28(%rsp),%r13
	movq 0x30(%rsp),%r12
	movq 0x38(%rsp),%rbx
	movq 0x40(%rsp),%rbp
	addq $0x48,%rsp
	ret
.text
.p2align 0x4
.globl _F_0
.private_extern _F_0
_F_0:
_L_0:
	movq (_gcState+0x18)(%rip),%r15
	cmpq %rbp,%r15
	setb %al
	movzbl %al,%eax
	testl %eax,%eax
	jnz _L_6
_L_1:
	movq (_gcState+0x450)(%rip),%r14
	movq %r14,%r13
	subq %r12,%r13
	cmpq $0x1050,%r13
	setb %al
	movzbl %al,%eax
	testl %eax,%eax
	jnz _L_838
_L_2:
	movq $0x11,%r15
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,%r13
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	xorq %r15,%r15
	xorq %r14,%r14
	movq %r14,0x8(%r13)
	movq %r15,0x0(%r13)
	movq $0x4F,%r11
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,%r9
	movq %r11,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r13,%r11
	movq $0x1,%r15
	movq %r15,0x8(%r9)
	movq %r11,0x0(%r9)
	movq $0x11,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq $0x1,%r14
	xorq %r13,%r13
	movq %r13,0x8(%r10)
	movq %r14,0x0(%r10)
	movq $0x4F,%r8
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rsi
	movq %r8,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r10,%r8
	movq $0x1,%r14
	movq %r14,0x8(%rsi)
	movq %r8,0x0(%rsi)
	movq $0x25,%r13
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,%rsp
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xD,%r13d
	movq (_globalObjptr+0x80)(%rip),%r10
	movq %r10,%rdi
	movq %rdi,0x8(%rsp)
	movl %r13d,0x0(%rsp)
	movq $0x25,%rdx
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,%rbx
	movq %rdx,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x30,%edx
	movq (_globalObjptr+0x88)(%rip),%rcx
	movq %rcx,%rax
	movq %rax,0x8(%rbx)
	movl %edx,0x0(%rbx)
	movq $0x25,%r11
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,%r8
	movq %r11,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x31,%r15d
	movq (_globalObjptr+0x90)(%rip),%r11
	movq %r11,%r14
	movq %r14,0x8(%r8)
	movl %r15d,0x0(%r8)
	movq $0x25,%r13
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,%rdi
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x2F,%r13d
	movq (_globalObjptr+0x98)(%rip),%r10
	movq %r10,%rdx
	movq %rdx,0x8(%rdi)
	movl %r13d,0x0(%rdi)
	movq $0x25,%rcx
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,%r15
	movq %rcx,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x23,%ecx
	movq (_globalObjptr+0xA0)(%rip),%rax
	movq %rax,%r11
	movq %r11,0x8(%r15)
	movl %ecx,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x25,%r14d
	movq (_globalObjptr+0xA8)(%rip),%r13
	movq %r13,%rdx
	movq %rdx,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%rcx
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,%r11
	movq %rcx,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x9,%ecx
	movq (_globalObjptr+0xB0)(%rip),%rax
	movq %rax,%r14
	movq %r14,0x8(%r11)
	movl %ecx,0x0(%r11)
	movq $0x25,%r13
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,%rcx
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5E,%r13d
	movq (_globalObjptr+0xB8)(%rip),%rdx
	movq %rdx,%rax
	movq %rax,0x8(%rcx)
	movl %r13d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x10,%r14d
	movq (_globalObjptr+0xC0)(%rip),%r13
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x59,%r14d
	movq (_globalObjptr+0xC8)(%rip),%r13
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xA,%r14d
	movq (_globalObjptr+0xD0)(%rip),%r13
	movq %r9,(_globalObjptr+0x0)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x35,%r14d
	movq (_globalObjptr+0xD8)(%rip),%r13
	movq %rsi,(_globalObjptr+0x8)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x3D,%r14d
	movq (_globalObjptr+0xE0)(%rip),%r13
	movq %rsp,(_globalObjptr+0x10)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x36,%r14d
	movq (_globalObjptr+0xE8)(%rip),%r13
	movq %rbx,(_localObjptr+0x10)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xB,%r14d
	movq (_globalObjptr+0xF0)(%rip),%r13
	movq %r8,(_localObjptr+0x18)(%rip)
	movq %r13,%r8
	movq %r8,0x8(%rbx)
	movl %r14d,0x0(%rbx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r8
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x27,%r14d
	movq (_globalObjptr+0xF8)(%rip),%r13
	movq %rdi,(_localObjptr+0x20)(%rip)
	movq %r13,%rdi
	movq %rdi,0x8(%r8)
	movl %r14d,0x0(%r8)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x21,%r14d
	movq (_globalObjptr+0x100)(%rip),%r13
	movq %r15,(_localObjptr+0x28)(%rip)
	movq %r13,%r15
	movq %r15,0x8(%rdi)
	movl %r14d,0x0(%rdi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x45,%r14d
	movq (_globalObjptr+0x108)(%rip),%r13
	movq %r10,(_localObjptr+0x30)(%rip)
	movq %r13,%r10
	movq %r10,0x8(%r15)
	movl %r14d,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x11,%r14d
	movq (_globalObjptr+0x110)(%rip),%r13
	movq %r11,(_localObjptr+0x38)(%rip)
	movq %r13,%r11
	movq %r11,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xE,%r14d
	movq (_globalObjptr+0x118)(%rip),%r13
	movq %rcx,(_localObjptr+0x40)(%rip)
	movq %r13,%rcx
	movq %rcx,0x8(%r11)
	movl %r14d,0x0(%r11)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rcx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1B,%r14d
	movq (_globalObjptr+0x120)(%rip),%r13
	movq %rdx,(_localObjptr+0x48)(%rip)
	movq %r13,%rdx
	movq %rdx,0x8(%rcx)
	movl %r14d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x41,%r14d
	movq (_globalObjptr+0x128)(%rip),%r13
	movq %rax,(_localObjptr+0x50)(%rip)
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5A,%r14d
	movq (_globalObjptr+0x130)(%rip),%r13
	movq %rbp,(_localObjptr+0x58)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5C,%r14d
	movq (_globalObjptr+0x138)(%rip),%r13
	movq %r9,(_localObjptr+0x60)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x24,%r14d
	movq (_globalObjptr+0x140)(%rip),%r13
	movq %rsi,(_localObjptr+0x68)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x4,%r14d
	movq (_globalObjptr+0x148)(%rip),%r13
	movq %rsp,(_localObjptr+0x70)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x16,%r14d
	movq (_globalObjptr+0x150)(%rip),%r13
	movq %rbx,(_localObjptr+0x78)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5,%r14d
	movq (_globalObjptr+0x158)(%rip),%r13
	movq %r8,(_localObjptr+0x80)(%rip)
	movq %r13,%r8
	movq %r8,0x8(%rbx)
	movl %r14d,0x0(%rbx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r8
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x38,%r14d
	movq (_globalObjptr+0x160)(%rip),%r13
	movq %rdi,(_localObjptr+0x88)(%rip)
	movq %r13,%rdi
	movq %rdi,0x8(%r8)
	movl %r14d,0x0(%r8)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x15,%r14d
	movq (_globalObjptr+0x168)(%rip),%r13
	movq %r15,(_localObjptr+0x90)(%rip)
	movq %r13,%r15
	movq %r15,0x8(%rdi)
	movl %r14d,0x0(%rdi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x3E,%r14d
	movq (_globalObjptr+0x170)(%rip),%r13
	movq %r10,(_localObjptr+0x98)(%rip)
	movq %r13,%r10
	movq %r10,0x8(%r15)
	movl %r14d,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x18,%r14d
	movq (_globalObjptr+0x178)(%rip),%r13
	movq %r11,(_localObjptr+0xA0)(%rip)
	movq %r13,%r11
	movq %r11,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1F,%r14d
	movq (_globalObjptr+0x180)(%rip),%r13
	movq %rcx,(_localObjptr+0xA8)(%rip)
	movq %r13,%rcx
	movq %rcx,0x8(%r11)
	movl %r14d,0x0(%r11)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rcx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x28,%r14d
	movq (_globalObjptr+0x188)(%rip),%r13
	movq %rdx,(_localObjptr+0xB0)(%rip)
	movq %r13,%rdx
	movq %rdx,0x8(%rcx)
	movl %r14d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5F,%r14d
	movq (_globalObjptr+0x190)(%rip),%r13
	movq %rax,(_localObjptr+0xB8)(%rip)
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x3F,%r14d
	movq (_globalObjptr+0x198)(%rip),%r13
	movq %rbp,(_localObjptr+0xC0)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x32,%r14d
	movq (_globalObjptr+0x1A0)(%rip),%r13
	movq %r9,(_localObjptr+0xC8)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x34,%r14d
	movq (_globalObjptr+0x1A8)(%rip),%r13
	movq %rsi,(_localObjptr+0xD0)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x33,%r14d
	movq (_globalObjptr+0x1B0)(%rip),%r13
	movq %rsp,(_localObjptr+0xD8)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x17,%r14d
	movq (_globalObjptr+0x1B8)(%rip),%r13
	movq %rbx,(_localObjptr+0xE0)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x37,%r14d
	movq (_globalObjptr+0x1C0)(%rip),%r13
	movq %r8,(_localObjptr+0xE8)(%rip)
	movq %r13,%r8
	movq %r8,0x8(%rbx)
	movl %r14d,0x0(%rbx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r8
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x60,%r14d
	movq (_globalObjptr+0x1C8)(%rip),%r13
	movq %rdi,(_localObjptr+0xF0)(%rip)
	movq %r13,%rdi
	movq %rdi,0x8(%r8)
	movl %r14d,0x0(%r8)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x13,%r14d
	movq (_globalObjptr+0x1D0)(%rip),%r13
	movq %r15,(_localObjptr+0xF8)(%rip)
	movq %r13,%r15
	movq %r15,0x8(%rdi)
	movl %r14d,0x0(%rdi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x2,%r14d
	movq (_globalObjptr+0x1D8)(%rip),%r13
	movq %r10,(_localObjptr+0x100)(%rip)
	movq %r13,%r10
	movq %r10,0x8(%r15)
	movl %r14d,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x8,%r14d
	movq (_globalObjptr+0x1E0)(%rip),%r13
	movq %r11,(_localObjptr+0x108)(%rip)
	movq %r13,%r11
	movq %r11,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x4D,%r14d
	movq (_globalObjptr+0x1E8)(%rip),%r13
	movq %rcx,(_localObjptr+0x110)(%rip)
	movq %r13,%rcx
	movq %rcx,0x8(%r11)
	movl %r14d,0x0(%r11)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rcx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x61,%r14d
	movq (_globalObjptr+0x1F0)(%rip),%r13
	movq %rdx,(_localObjptr+0x118)(%rip)
	movq %r13,%rdx
	movq %rdx,0x8(%rcx)
	movl %r14d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xC,%r14d
	movq (_globalObjptr+0x1F8)(%rip),%r13
	movq %rax,(_localObjptr+0x120)(%rip)
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x5B,%r14d
	movq (_globalObjptr+0x200)(%rip),%r13
	movq %rbp,(_localObjptr+0x128)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x2A,%r14d
	movq (_globalObjptr+0x208)(%rip),%r13
	movq %r9,(_localObjptr+0x130)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1C,%r14d
	movq (_globalObjptr+0x210)(%rip),%r13
	movq %rsi,(_localObjptr+0x138)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x62,%r14d
	movq (_globalObjptr+0x218)(%rip),%r13
	movq %rsp,(_localObjptr+0x140)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x63,%r14d
	movq (_globalObjptr+0x220)(%rip),%r13
	movq %rbx,(_localObjptr+0x148)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x4E,%r14d
	movq (_globalObjptr+0x228)(%rip),%r13
	movq %r8,(_localObjptr+0x150)(%rip)
	movq %r13,%r8
	movq %r8,0x8(%rbx)
	movl %r14d,0x0(%rbx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r8
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x39,%r14d
	movq (_globalObjptr+0x230)(%rip),%r13
	movq %rdi,(_localObjptr+0x158)(%rip)
	movq %r13,%rdi
	movq %rdi,0x8(%r8)
	movl %r14d,0x0(%r8)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x14,%r14d
	movq (_globalObjptr+0x238)(%rip),%r13
	movq %r15,(_localObjptr+0x160)(%rip)
	movq %r13,%r15
	movq %r15,0x8(%rdi)
	movl %r14d,0x0(%rdi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x42,%r14d
	movq (_globalObjptr+0x240)(%rip),%r13
	movq %r10,(_localObjptr+0x168)(%rip)
	movq %r13,%r10
	movq %r10,0x8(%r15)
	movl %r14d,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x26,%r14d
	movq (_globalObjptr+0x248)(%rip),%r13
	movq %r11,(_localObjptr+0x170)(%rip)
	movq %r13,%r11
	movq %r11,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x2D,%r14d
	movq (_globalObjptr+0x250)(%rip),%r13
	movq %rcx,(_localObjptr+0x178)(%rip)
	movq %r13,%rcx
	movq %rcx,0x8(%r11)
	movl %r14d,0x0(%r11)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rcx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x19,%r14d
	movq (_globalObjptr+0x258)(%rip),%r13
	movq %rdx,(_localObjptr+0x180)(%rip)
	movq %r13,%rdx
	movq %rdx,0x8(%rcx)
	movl %r14d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x6,%r14d
	movq (_globalObjptr+0x260)(%rip),%r13
	movq %rax,(_localObjptr+0x188)(%rip)
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x66,%r14d
	movq (_globalObjptr+0x268)(%rip),%r13
	movq %rbp,(_localObjptr+0x190)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x54,%r14d
	movq (_globalObjptr+0x270)(%rip),%r13
	movq %r9,(_localObjptr+0x198)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1,%r14d
	movq (_globalObjptr+0x278)(%rip),%r13
	movq %rsi,(_localObjptr+0x1A0)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x20,%r14d
	movq (_globalObjptr+0x280)(%rip),%r13
	movq %rsp,(_localObjptr+0x1A8)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x64,%r14d
	movq (_globalObjptr+0x288)(%rip),%r13
	movq %rbx,(_localObjptr+0x1B0)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x2B,%r14d
	movq (_globalObjptr+0x290)(%rip),%r13
	movq %r8,(_localObjptr+0x1B8)(%rip)
	movq %r13,%r8
	movq %r8,0x8(%rbx)
	movl %r14d,0x0(%rbx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r8
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x29,%r14d
	movq (_globalObjptr+0x298)(%rip),%r13
	movq %rdi,(_localObjptr+0x1C0)(%rip)
	movq %r13,%rdi
	movq %rdi,0x8(%r8)
	movl %r14d,0x0(%r8)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x22,%r14d
	movq (_globalObjptr+0x2A0)(%rip),%r13
	movq %r15,(_localObjptr+0x1C8)(%rip)
	movq %r13,%r15
	movq %r15,0x8(%rdi)
	movl %r14d,0x0(%rdi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1E,%r14d
	movq (_globalObjptr+0x2A8)(%rip),%r13
	movq %r10,(_localObjptr+0x1D0)(%rip)
	movq %r13,%r10
	movq %r10,0x8(%r15)
	movl %r14d,0x0(%r15)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1D,%r14d
	movq (_globalObjptr+0x2B0)(%rip),%r13
	movq %r11,(_localObjptr+0x1D8)(%rip)
	movq %r13,%r11
	movq %r11,0x8(%r10)
	movl %r14d,0x0(%r10)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x3,%r14d
	movq (_globalObjptr+0x2B8)(%rip),%r13
	movq %rcx,(_localObjptr+0x1E0)(%rip)
	movq %r13,%rcx
	movq %rcx,0x8(%r11)
	movl %r14d,0x0(%r11)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rcx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x46,%r14d
	movq (_globalObjptr+0x2C0)(%rip),%r13
	movq %rdx,(_localObjptr+0x1E8)(%rip)
	movq %r13,%rdx
	movq %rdx,0x8(%rcx)
	movl %r14d,0x0(%rcx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rdx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x65,%r14d
	movq (_globalObjptr+0x2C8)(%rip),%r13
	movq %rax,(_localObjptr+0x1F0)(%rip)
	movq %r13,%rax
	movq %rax,0x8(%rdx)
	movl %r14d,0x0(%rdx)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rax
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x3C,%r14d
	movq (_globalObjptr+0x2D0)(%rip),%r13
	movq %rbp,(_localObjptr+0x1F8)(%rip)
	movq %r13,%rbp
	movq %rbp,0x8(%rax)
	movl %r14d,0x0(%rax)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x7,%r14d
	movq (_globalObjptr+0x2D8)(%rip),%r13
	movq %r9,(_localObjptr+0x200)(%rip)
	movq %r13,%r9
	movq %r9,0x8(%rbp)
	movl %r14d,0x0(%rbp)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x1A,%r14d
	movq (_globalObjptr+0x2E0)(%rip),%r13
	movq %rsi,(_localObjptr+0x208)(%rip)
	movq %r13,%rsi
	movq %rsi,0x8(%r9)
	movl %r14d,0x0(%r9)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x23,%r14d
	movq (_globalObjptr+0x2E8)(%rip),%r13
	movq %rsp,(_localObjptr+0x210)(%rip)
	movq %r13,%rsp
	movq %rsp,0x8(%rsi)
	movl %r14d,0x0(%rsi)
	movq $0x25,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0x12,%r14d
	movq (_globalObjptr+0x2F0)(%rip),%r13
	movq %rbx,(_localObjptr+0x218)(%rip)
	movq %r13,%rbx
	movq %rbx,0x8(%rsp)
	movl %r14d,0x0(%rsp)
	movq $0x45,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%rbx
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rsp,%r14
	movq $0x1,%r13
	movq %r13,0x8(%rbx)
	movq %r14,0x0(%rbx)
	movq $0x45,%rsp
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,%r13
	movq %rsp,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rsi,%r14
	movq %rbx,%rsp
	movq %rsp,0x8(%r13)
	movq %r14,0x0(%r13)
	movq $0x45,%rsi
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,%r14
	movq %rsi,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r9,%rsi
	movq %r13,%r9
	movq %r9,0x8(%r14)
	movq %rsi,0x0(%r14)
	movq $0x45,%r13
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rbx
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rbp,%r13
	movq %r14,%rsp
	movq %rsp,0x8(%rbx)
	movq %r13,0x0(%rbx)
	movq $0x45,%r14
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rax,%r14
	movq %rbx,%r9
	movq %r9,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq $0x45,%r13
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rsi
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rdx,%r13
	movq %rbp,%rsp
	movq %rsp,0x8(%rsi)
	movq %r13,0x0(%rsi)
	movq $0x45,%r14
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,%rbp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rcx,%r14
	movq %rsi,%r9
	movq %r9,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq $0x45,%r13
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rsi
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r11,%r13
	movq %rbp,%r11
	movq %r11,0x8(%rsi)
	movq %r13,0x0(%rsi)
	movq $0x45,%r14
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,%rsp
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r10,%r14
	movq %rsi,%r10
	movq %r10,0x8(%rsp)
	movq %r14,0x0(%rsp)
	movq $0x45,%r13
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r9
	movq %r13,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r15,%r13
	movq %rsp,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rdi,%r14
	movq %r9,%r11
	movq %r11,0x8(%r10)
	movq %r14,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r8,%r15
	movq %r10,%r13
	movq %r13,0x8(%r9)
	movq %r15,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x218)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x210)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x208)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x200)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1F8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1F0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1E8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1E0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1D8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1D0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1C8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1C0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1B8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1B0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1A8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x1A0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x198)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x190)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x188)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x180)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x178)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x170)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x168)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x160)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x158)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x150)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x148)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x140)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x138)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x130)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x128)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x120)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x118)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x110)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x108)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x100)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xF8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xF0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xE8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xE0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xD8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xD0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xC8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xC0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xB8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xB0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xA8)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0xA0)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x98)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x90)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x88)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x80)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x78)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x70)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x68)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x60)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x58)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x50)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x48)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x40)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x38)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x30)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x28)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x20)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x45,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x18)(%rip),%r14
	movq %r14,%r11
	movq %r9,%r14
	movq %r14,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x45,%r15
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r9
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_localObjptr+0x10)(%rip),%r15
	movq %r15,%r13
	movq %r10,%r15
	movq %r15,0x8(%r9)
	movq %r13,0x0(%r9)
	movq $0x4D,%r14
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,%r10
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_globalObjptr+0x2F8)(%rip),%r14
	movq %r14,%r11
	movq $0x1,%r8
	movq %r8,0x8(%r10)
	movq %r11,0x0(%r10)
	movq $0x39,%rsp
	movq %r12,%rbp
	addq $0x8,%rbp
	movq %rbp,%rsi
	movq %rsp,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	movq (_globalObjptr+0x300)(%rip),%rsp
	movq %rsp,%rbp
	movq %rbp,0x0(%rsi)
	movq $0x29,%rdi
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,%rcx
	movq %rdi,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	xorl %edi,%edi
	movl $0x30,%edx
	movl $0x3930,%ebx
	movl %ebx,0x8(%rcx)
	movl %edx,0x4(%rcx)
	movl %edi,0x0(%rcx)
	movq $0x29,%rax
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r15
	movq %rax,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xA,%r13d
	movl $0x61,%eax
	movl $0x6661,%r14d
	movl %r14d,0x8(%r15)
	movl %r13d,0x0(%r15)
	movl %eax,0x4(%r15)
	movq $0x29,%r11
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,%rsp
	movq %r11,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movl $0xA,%r11d
	movl $0x41,%r8d
	movl $0x4641,%ebp
	movl %ebp,0x8(%rsp)
	movl %r8d,0x4(%rsp)
	movl %r11d,0x0(%rsp)
	movq $0x41,%rdi
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,%rbx
	movq %rdi,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %rsp,%rdi
	movq $0x1,%r11
	movq %r11,0x8(%rbx)
	movq %rdi,0x0(%rbx)
	movq $0x41,%r8
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rbp
	movq %r8,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq %r15,%r8
	movq %rbx,%r15
	movq %r15,0x8(%rbp)
	movq %r8,0x0(%rbp)
	movq $0x37,%r14
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,%r11
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	movq (_globalObjptr+0x308)(%rip),%r14
	movq %r14,%r13
	movq %r13,0x0(%r11)
	movq $0x39,%rsp
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,%rdx
	movq %rsp,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	movq (_globalObjptr+0x310)(%rip),%rsp
	movq %rsp,%rdi
	movq %rdi,0x0(%rdx)
	movq $0x39,%rbx
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,%r8
	movq %rbx,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	movq (_globalObjptr+0x318)(%rip),%rbx
	movq %rbx,%rax
	movq %rax,0x0(%r8)
	movq $0x13,%r15
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,%r13
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	xorl %r15d,%r15d
	movl %r15d,0x0(%r13)
	movq $0x4D,%r14
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,%rdi
	movq %r14,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_globalObjptr+0x320)(%rip),%r14
	movq %r14,%rsp
	movq $0x1,%rbx
	movq %rbx,0x8(%rdi)
	movq %rsp,0x0(%rdi)
	movq $0x4D,%rax
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,%r14
	movq %rax,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_globalObjptr+0x328)(%rip),%r15
	movq %r15,%rax
	movq %rdi,%rsp
	movq %rsp,0x8(%r14)
	movq %rax,0x0(%r14)
	movq $0x39,%rdi
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,%r15
	movq %rdi,0x0(%r12)
	movq %r12,%r12
	addq $0x10,%r12
	movq (_globalObjptr+0x330)(%rip),%rdi
	movq %rdi,%rbx
	movq %rbx,0x0(%r15)
	movq $0x4D,%r15
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,%rax
	movq %r15,0x0(%r12)
	movq %r12,%r12
	addq $0x18,%r12
	movq (_globalObjptr+0x338)(%rip),%r15
	movq %r15,%rbx
	movq $0x1,%rsp
	movq (_c_stackP+0x0)(%rip),%rdi
	xchgq %rdi,%rsp
	movq $0x2B,%r15
	xchgq %r15,%rcx
	movq %r9,(_globalObjptr+0x18)(%rip)
	xorq %r9,%r9
	xchgq %r9,%rdx
	movq %r10,(_globalObjptr+0x20)(%rip)
	xorq %r10,%r10
	xchgq %r10,%rsi
	movq %r10,(_globalObjptr+0x28)(%rip)
	leaq _gcState(%rip),%r10
	movq %r15,(_globalObjptr+0x30)(%rip)
	movq %r10,%r15
	xchgq %r15,%rdi
	xorq %r10,%r10
	xchgq %r10,%rax
	movq %rbp,(_globalObjptr+0x38)(%rip)
	movq (_gcState+0x10)(%rip),%rbp
	addq $0x8,%rbp
	movq %r11,(_globalObjptr+0x40)(%rip)
	leaq (_L_3+0x0)(%rip),%r11
	movq %r11,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %r15,0x8(%r10)
	movq %rbx,0x0(%r10)
	movq %r8,(_globalObjptr+0x50)(%rip)
	movq %r13,(_globalObjptr+0x58)(%rip)
	movq %r14,(_globalObjptr+0x60)(%rip)
	movq %r9,(_globalObjptr+0x48)(%rip)
	movq %r10,(_globalObjptr+0x68)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	movq %rbp,(_gcState+0x10)(%rip)
	xchgq %r11,%r13
	xchgq %r10,%r14
	xchgq %r8,%rbx
	xchgq %r9,%rbx
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r15
	movq %r15,%r12
	movq (_gcState+0x10)(%rip),%r15
	movq %r15,%rbp
	jmp _L_3
.p2align 0x4
.long 0x0
_L_3:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	movq (_c_stackP+0x0)(%rip),%r14
	movq %r14,%rsp
	movq $0x15,%r14
	movq %r14,%rcx
	xorq %r14,%r14
	movq %r14,%rdx
	xorq %r14,%r14
	movq %r14,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%r13
	movq %r13,%rdi
	xorq %r14,%r14
	xchgq %r14,%rax
	addq $0x8,%rbp
	leaq (_L_4+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %r15,(_globalObjptr+0x70)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	movq %rbp,(_gcState+0x10)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r15
	movq %r15,%r12
	movq (_gcState+0x10)(%rip),%r15
	movq %r15,%rbp
	jmp _L_4
.p2align 0x4
.long 0x0
_L_4:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	addq $0x8,%rbp
	leaq (_L_5+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %r15,(_globalObjptr+0x78)(%rip)
	jmp _main_0
.p2align 0x4
_L_838:
_L_6:
	movq (_c_stackP+0x0)(%rip),%r15
	movq %r15,%rsp
	movl $0x0,%r15d
	movl %r15d,%r14d
	movq %r14,%rdx
	movq $0x1050,%r15
	movq %r15,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%r14
	movq %r14,%rdi
	xorq %r15,%r15
	movq %r15,%rax
	addq $0x8,%rbp
	leaq (_L_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r15
	movq %r15,%r12
	movq (_gcState+0x10)(%rip),%r15
	movq %r15,%rbp
	jmp _L_7
.p2align 0x4
.long 0x0
_L_7:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	jmp _L_2
.p2align 0x4
.long 0x1
_L_5:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (_c_stackP+0x0)(%rip),%r15
	movq %r15,%rsp
	movq (_globalObjptr+0x340)(%rip),%r15
	movq %r15,%r14
	movq %r14,%rdi
	xorq %r14,%r14
	movq %r14,%rax
	call _MLton_bug
.text
.p2align 0x4
.globl _main_0
.private_extern _main_0
_main_0:
_L_8:
	movq (_gcState+0x20)(%rip),%r15
	movq %r15,0x8(%rbp)
	cmpq %rbp,(_gcState+0x18)(%rip)
	jb _L_374
_L_9:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_939
_L_10:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movq (_globalObjptr+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x4000000000000000,%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
_loop_0:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_938
.p2align 0x4,,0x7
_L_11:
	movq 0x38(%rbp),%r15
	testq %r15,%r15
	jz _L_848
_L_12:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo _L_840
_L_30:
	movq $0x11,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x30(%rbp)
	movq $0x4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq $0x0,0x38(%rbp)
	jmp _loop_0
.p2align 0x4
_L_840:
_L_13:
	movq $0x1,%r13
	xchgq %r13,%r15
_L_14:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x348)(%rip),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_15:
	cmpq $0x1,%r15
	je _L_847
	cmpq $0x2,%r15
	je _L_846
	cmpq $0x3,%r15
	je _L_845
	cmpq $0x5,%r15
	je _L_844
_L_16:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1C,%r14
	je _L_843
	cmpq $0x1D,%r14
	je _L_842
	cmpq $0x1E,%r14
	je _L_841
_L_17:
	movq 0x0(%r15),%r14
	movq (_globalObjptr+0x350)(%rip),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_18:
	movq %r14,%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_19:
_print_0:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x338)(%rip),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_20:
	movq (_globalObjptr+0x358)(%rip),%rdi
	xorq %rax,%rax
	call _MLton_bug
_L_21:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_841:
_L_25:
	movq (_globalObjptr+0x370)(%rip),%r15
_print_1:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq %r15,%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_23:
	jmp _print_0
.p2align 0x4
_L_842:
_L_24:
	movq (_globalObjptr+0x368)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_843:
_L_22:
	movq (_globalObjptr+0x360)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_844:
_L_29:
	movq (_globalObjptr+0x390)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_845:
_L_28:
	movq (_globalObjptr+0x388)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_846:
_L_27:
	movq (_globalObjptr+0x380)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_847:
_L_26:
	movq (_globalObjptr+0x378)(%rip),%r15
	jmp _print_1
.p2align 0x4
_L_848:
_L_31:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_32
_L_370:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (_L_371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_371
.p2align 0x4
.long 0x1A
_L_371:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
_L_32:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x2B,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x10,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_33+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_33
.p2align 0x4
.long 0x2
_L_33:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je _L_39
_L_34:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %rax,%r15
.p2align 0x4,,0x7
_L_35:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x0(%r15,%r11,8)
	cmpq $0x1,%r13
	je _L_849
_L_36:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp _L_35
.p2align 0x4
_L_849:
_L_37:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_39
_L_367:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_368
.p2align 0x4
.long 0x19
_L_368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_39:
	movq $0xF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_1:
	cmpq $0x100,%r15
	jnl _L_850
_L_366:
	incq %r15
	jmp _loop_1
.p2align 0x4
_L_850:
_L_40:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_2:
	cmpq $0x100,%r15
	jnl _L_851
_L_365:
	incq %r15
	jmp _loop_2
.p2align 0x4
_L_851:
_L_41:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_3:
	cmpq $0x100,%r15
	jnl _L_852
_L_364:
	incq %r15
	jmp _loop_3
.p2align 0x4
_L_852:
_L_42:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_4:
	cmpq $0x100,%r15
	jnl _L_856
_L_354:
	movb %r15b,%dl
	movq (_globalObjptr+0x38)(%rip),%r13
	movq (_globalObjptr+0x30)(%rip),%r14
.p2align 0x4,,0x7
_L_355:
	movb 0x9(%r14),%r11b
	cmpb 0x8(%r14),%dl
	jb _L_855
_L_356:
	cmpb %dl,%r11b
	jnb _L_854
	movq %r15,(_localWord64+0x0)(%rip)
_L_360:
	cmpq $0x1,%r13
	je _L_853
_L_361:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq (_localWord64+0x0)(%rip),%r15
	jmp _L_355
.p2align 0x4
_L_853:
_L_358:
	movq (_localWord64+0x0)(%rip),%r15
	incq %r15
	jmp _loop_4
.p2align 0x4
_L_854:
	movq %r15,(_localWord64+0x0)(%rip)
	jmp _L_358
.p2align 0x4
_L_855:
	movq %r15,(_localWord64+0x0)(%rip)
	jmp _L_360
.p2align 0x4
_L_856:
_L_43:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_5:
	cmpq $0x100,%r15
	jnl _L_857
_L_353:
	incq %r15
	jmp _loop_5
.p2align 0x4
_L_857:
_L_44:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x21,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_45
.p2align 0x4
.long 0x2
_L_45:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_6:
	cmpq $0x21,%r15
	jnl _L_858
_L_352:
	movq 0x30(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_6
.p2align 0x4
_L_858:
_L_46:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_47
_L_350:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (_L_351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_351
.p2align 0x4
.long 0x18
_L_351:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
_L_47:
	movq $0x19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movq $0x2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r12,(_gcState+0x0)(%rip)
	movq %r15,0x0(%r14)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x41,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_48
.p2align 0x4
.long 0x3
_L_48:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
_loop_7:
	cmpq $0x41,%r15
	jnl _L_859
_L_349:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_7
.p2align 0x4
_L_859:
_L_49:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_8:
	cmpq $0x1,%r15
	jnl _L_860
_L_348:
	incq %r15
	jmp _loop_8
.p2align 0x4
_L_860:
_L_50:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_51
_L_346:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_347
.p2align 0x4
.long 0x3
_L_347:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
_L_51:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (_gcState+0x3D0)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x3F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x2,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,%r13
	movq %r10,0x0(%r15)
	movq $0x3F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movq $0x27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x43,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edi
	xorq %rax,%rax
	call _Posix_ProcEnv_isatty
_L_52:
	testl %eax,%eax
	jz _L_932
_L_53:
	movb $0x1,0x58(%rbp)
_L_54:
	movq $0x19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	incl (_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edi
	xorq %rax,%rax
	call _Posix_FileSys_Stat_fstat
_L_55:
	cmpl $0xFFFFFFFF,%eax
	je _L_923
_L_56:
	xorq %rax,%rax
	call _Posix_FileSys_Stat_getDev
_L_57:
	xorq %r15,%r15
	movl %eax,(_cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	call _Posix_FileSys_Stat_getINo
_L_58:
	xorq %r15,%r15
	xchgq %r15,%rax
	call _Posix_FileSys_Stat_getMode
_L_59:
	movw %ax,0x5A(%rbp)
	xorq %rax,%rax
	call _Posix_FileSys_Stat_getNLink
_L_60:
	xorq %r15,%r15
	movw %ax,(_cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	call _Posix_FileSys_Stat_getUId
_L_61:
	xorq %r15,%r15
	movl %eax,(_cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	call _Posix_FileSys_Stat_getGId
_L_62:
	xorq %r15,%r15
	movl %eax,(_cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	call _Posix_FileSys_Stat_getSize
_L_63:
	xorq %r15,%r15
	xchgq %r15,%rax
	call _Posix_FileSys_Stat_getATime
_L_64:
	movq %rax,%r15
	sarq $0x3E,%r15
	jz _L_922
_L_65:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je _L_921
_L_66:
	cmpq $0x0,%rax
	jl _L_920
_L_67:
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x0)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
_loop_9:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_919
.p2align 0x4,,0x7
_L_68:
	movq 0x78(%rbp),%r15
	testq %r15,%r15
	jz _L_863
_L_69:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo _L_861
_L_73:
	movq $0x11,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x70(%rbp)
	movq $0x4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq $0x0,0x78(%rbp)
	jmp _loop_9
.p2align 0x4
_L_861:
_L_70:
	movl (_gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz _L_862
_L_71:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movq $0x1,%r15
	jmp _L_14
.p2align 0x4
_L_862:
_L_72:
	movq (_globalObjptr+0x40)(%rip),%r15
	jmp _L_14
.p2align 0x4
_L_863:
_L_74:
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz _L_917
_L_75:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x2B,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (_L_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_76
.p2align 0x4
.long 0x4
_L_76:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_916
_L_77:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq %rax,%r13
.p2align 0x4,,0x7
_L_78:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x0(%r13,%r11,8)
	cmpq $0x1,%r14
	je _L_864
_L_79:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp _L_78
.p2align 0x4
_L_864:
_L_80:
	movq %r13,%r15
_L_81:
	movq $0xD,0xFFFFFFFFFFFFFFF8(%r15)
_L_82:
	movq %r15,%r14
	andq $0x77359401,%r14
	andq $0x1,%r14
	jz _numLimbs_0
_L_83:
	movq %r15,%r14
	sarq $0x1,%r14
	imulq $0x3B9ACA00,%r14
	jo _numLimbs_0
_L_308:
	movq %r14,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	xorq %r13,%r14
	cmpq $0x0,%r14
	jnl _L_87
_numLimbs_0:
	movq %r15,%r14
	andq $0x1,%r14
	jnz _L_914
_L_306:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo _L_70
_L_307:
	movq %r14,%r15
_L_85:
	incq %r15
	jo _L_70
_L_87:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_FileSys_Stat_getMTime
_L_88:
	movq %rax,%r15
	sarq $0x3E,%r15
	jz _L_911
_L_89:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je _L_910
_L_90:
	cmpq $0x0,%rax
	jl _L_909
_L_91:
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x0)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
_loop_10:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_908
.p2align 0x4,,0x7
_L_92:
	movq 0x78(%rbp),%r15
	testq %r15,%r15
	jz _L_866
_L_93:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo _L_70
_L_94:
	movq $0x11,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x70(%rbp)
	movq $0x4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq $0x0,0x78(%rbp)
	jmp _loop_10
.p2align 0x4
_L_866:
_L_95:
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz _L_906
_L_96:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x2B,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (_L_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_97
.p2align 0x4
.long 0x4
_L_97:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_905
_L_98:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq %rax,%r13
.p2align 0x4,,0x7
_L_99:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x0(%r13,%r11,8)
	cmpq $0x1,%r14
	je _L_867
_L_100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp _L_99
.p2align 0x4
_L_867:
_L_101:
	movq %r13,%r15
_L_102:
	movq $0xD,0xFFFFFFFFFFFFFFF8(%r15)
_L_103:
	movq %r15,%r14
	andq $0x77359401,%r14
	andq $0x1,%r14
	jz _numLimbs_1
_L_104:
	movq %r15,%r14
	sarq $0x1,%r14
	imulq $0x3B9ACA00,%r14
	jo _numLimbs_1
_L_292:
	movq %r14,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	xorq %r13,%r14
	cmpq $0x0,%r14
	jnl _L_108
_numLimbs_1:
	movq %r15,%r14
	andq $0x1,%r14
	jnz _L_903
_L_290:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo _L_70
_L_291:
	movq %r14,%r15
_L_106:
	incq %r15
	jo _L_70
_L_108:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_FileSys_Stat_getCTime
_L_109:
	movq %rax,%r15
	sarq $0x3E,%r15
	jz _L_900
_L_110:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je _L_899
_L_111:
	cmpq $0x0,%rax
	jl _L_898
_L_112:
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x0)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
_loop_11:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_897
.p2align 0x4,,0x7
_L_113:
	movq 0x78(%rbp),%r15
	testq %r15,%r15
	jz _L_869
_L_114:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo _L_70
_L_115:
	movq $0x11,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x70(%rbp)
	movq $0x4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq $0x0,0x78(%rbp)
	jmp _loop_11
.p2align 0x4
_L_869:
_L_116:
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz _L_895
_L_117:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x2B,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (_L_118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_118
.p2align 0x4
.long 0x4
_L_118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_894
_L_119:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq %rax,%r13
.p2align 0x4,,0x7
_L_120:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x0(%r13,%r11,8)
	cmpq $0x1,%r14
	je _L_870
_L_121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp _L_120
.p2align 0x4
_L_870:
_L_122:
	movq %r13,%r15
_L_123:
	movq $0xD,0xFFFFFFFFFFFFFFF8(%r15)
_L_124:
	movq %r15,%r14
	andq $0x77359401,%r14
	andq $0x1,%r14
	jz _numLimbs_2
_L_125:
	movq %r15,%r14
	sarq $0x1,%r14
	imulq $0x3B9ACA00,%r14
	jo _numLimbs_2
_L_276:
	movq %r14,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	xorq %r13,%r14
	cmpq $0x0,%r14
	jnl _L_129
_numLimbs_2:
	movq %r15,%r14
	andq $0x1,%r14
	jnz _L_892
_L_274:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo _L_70
_L_275:
	movq %r14,%r15
_L_127:
	incq %r15
	jo _L_70
_L_129:
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_889
_L_130:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_131
_L_271:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (_L_272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_272
.p2align 0x4
.long 0x16
_L_272:
	addq $0xFFFFFFFFFFFFFF90,%rbp
_L_131:
	movq (_c_stackP+0x0)(%rip),%rsp
	movzwq 0x5A(%rbp),%rdi
	xorq %rax,%rax
	call _Posix_FileSys_ST_isReg
_L_132:
	testl %eax,%eax
	jz _L_887
_L_133:
	incl (_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_134
_L_268:
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (_L_269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_269
.p2align 0x4
.long 0x15
_L_269:
	addq $0xFFFFFFFFFFFFFF90,%rbp
_L_134:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	movl $0x1,%r14d
	movl %r14d,%edi
	xorq %rax,%rax
	call _Posix_IO_lseek
_L_135:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_877
_L_136:
	movl (_gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz _L_876
_L_137:
	movq 0x10(%rbp),%r15
	movq %rax,0x0(%r15)
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
_L_138:
	movq $0x1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq (_globalObjptr+0x398)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq $0x21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%r12
	movb 0x58(%rbp),%r15b
	testb %r15b,%r15b
	jnz _L_873
_L_139:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_140
.p2align 0x4
.long 0x5
_L_140:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_12:
	cmpq $0x1000,%r15
	jnl _L_871
_L_236:
	movq 0x20(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_12
.p2align 0x4
_L_871:
_L_141:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_142
_L_234:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_235
.p2align 0x4
.long 0x10
_L_235:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
_L_142:
	movq $0x49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (_globalObjptr+0x58)(%rip),%r14
	movq %r14,0x8(%r15)
_L_143:
	movq $0x1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (_gcState+0x3D0)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq $0x31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movq $0x33,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r13)
	leaq _L_204(%rip),%r15
	movq %r15,0x0(%rbp)
	movq %rbp,%r15
	addq $0x8,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	movq (_globalObjptr+0x3A0)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (_L_144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _print_3
.p2align 0x4
_L_873:
_L_237:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_238
.p2align 0x4
.long 0x10
_L_238:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_18:
	cmpq $0x1000,%r15
	jnl _L_874
_L_243:
	movq 0x58(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_18
.p2align 0x4
_L_874:
_L_239:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_240
_L_241:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_242
.p2align 0x4
.long 0x11
_L_242:
	addq $0xFFFFFFFFFFFFFF98,%rbp
_L_240:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp _L_143
.p2align 0x4
_L_876:
_L_244:
	movq (_globalObjptr+0x40)(%rip),%r15
	jmp _L_14
.p2align 0x4
_L_877:
_L_245:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_246:
	movl %eax,0x10(%rbp)
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_885
_L_247:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_248
_L_265:
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_266
.p2align 0x4
.long 0x14
_L_266:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
_L_248:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x10(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_249:
	movq %rax,0x18(%rbp)
	testq %rax,%rax
	jz _L_883
_L_250:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_19:
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_878
_L_251:
	incl %ecx
	jmp _loop_19
.p2align 0x4
_L_878:
_L_252:
	movq 0x20(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_882
_L_253:
	testq %rdx,%rdx
	jz _L_881
_L_254:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_255
.p2align 0x4
.long 0x12
_L_255:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
_L_join_3:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_20:
	cmpq 0x20(%rbp),%r15
	jnl _L_879
_L_261:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_20
.p2align 0x4
_L_879:
_L_256:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_257
_L_259:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_260
.p2align 0x4
.long 0x13
_L_260:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_257:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_258:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r14,%r15
	jmp _L_14
.p2align 0x4
_L_881:
_L_262:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp _L_join_3
.p2align 0x4
_L_882:
_L_263:
	movq $0x2,%r15
	jmp _L_14
.p2align 0x4
_L_883:
_L_264:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_258
.p2align 0x4
_L_885:
_L_267:
	movq (_globalObjptr+0x40)(%rip),%r14
	movq %r14,%r15
	jmp _L_14
.p2align 0x4
_L_887:
_L_270:
	movq 0x18(%rbp),%r15
	jmp _L_138
.p2align 0x4
_L_889:
_L_273:
	movq (_globalObjptr+0x40)(%rip),%r14
	movq %r14,%r15
	jmp _L_14
.p2align 0x4
_L_892:
_L_126:
	movq $0x1,%r15
	jmp _L_127
.p2align 0x4
_L_894:
	movq %rax,%r15
	jmp _L_123
.p2align 0x4
_L_895:
_L_281:
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_896
_L_282:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq (_globalObjptr+0x70)(%rip),%r13
	xchgq %r10,%r15
	jmp _L_120
.p2align 0x4
_L_896:
_L_283:
	movq (_globalObjptr+0x70)(%rip),%r14
	xchgq %r14,%r15
	jmp _L_123
.p2align 0x4
_L_897:
_L_284:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (_L_285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_285
.p2align 0x4
.long 0x17
_L_285:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp _L_113
.p2align 0x4
_L_898:
_L_286:
	negq %rax
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp _loop_11
.p2align 0x4
_L_899:
	movq %rax,%r15
_L_288:
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp _L_124
.p2align 0x4
_L_900:
	movq %rax,%r15
	jmp _L_288
.p2align 0x4
_L_903:
_L_105:
	movq $0x1,%r15
	jmp _L_106
.p2align 0x4
_L_905:
	movq %rax,%r15
	jmp _L_102
.p2align 0x4
_L_906:
_L_297:
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_907
_L_298:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq (_globalObjptr+0x70)(%rip),%r13
	xchgq %r10,%r15
	jmp _L_99
.p2align 0x4
_L_907:
_L_299:
	movq (_globalObjptr+0x70)(%rip),%r14
	xchgq %r14,%r15
	jmp _L_102
.p2align 0x4
_L_908:
_L_300:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (_L_301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_301
.p2align 0x4
.long 0x17
_L_301:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp _L_92
.p2align 0x4
_L_909:
_L_302:
	negq %rax
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp _loop_10
.p2align 0x4
_L_910:
	movq %rax,%r15
_L_304:
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp _L_103
.p2align 0x4
_L_911:
	movq %rax,%r15
	jmp _L_304
.p2align 0x4
_L_914:
_L_84:
	movq $0x1,%r15
	jmp _L_85
.p2align 0x4
_L_916:
	movq %rax,%r15
	jmp _L_81
.p2align 0x4
_L_917:
_L_313:
	movq 0x68(%rbp),%r11
	cmpq $0x1,%r11
	je _L_918
_L_314:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq (_globalObjptr+0x70)(%rip),%r13
	xchgq %r10,%r15
	jmp _L_78
.p2align 0x4
_L_918:
_L_315:
	movq (_globalObjptr+0x70)(%rip),%r14
	xchgq %r14,%r15
	jmp _L_81
.p2align 0x4
_L_919:
_L_316:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (_L_317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_317
.p2align 0x4
.long 0x17
_L_317:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp _L_68
.p2align 0x4
_L_920:
_L_318:
	negq %rax
	movq %rax,0x78(%rbp)
	movq (_globalObjptr+0x8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp _loop_9
.p2align 0x4
_L_921:
	movq %rax,%r15
_L_320:
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp _L_82
.p2align 0x4
_L_922:
	movq %rax,%r15
	jmp _L_320
.p2align 0x4
_L_923:
_L_322:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_323:
	movl %eax,0x10(%rbp)
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_931
_L_324:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_325
_L_342:
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_343
.p2align 0x4
.long 0x14
_L_343:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
_L_325:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x10(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_326:
	movq %rax,0x18(%rbp)
	testq %rax,%rax
	jz _L_929
_L_327:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_21:
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_924
_L_328:
	incl %ecx
	jmp _loop_21
.p2align 0x4
_L_924:
_L_329:
	movq 0x20(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_928
_L_330:
	testq %rdx,%rdx
	jz _L_927
_L_331:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_332
.p2align 0x4
.long 0x12
_L_332:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
_L_join_4:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_22:
	cmpq 0x20(%rbp),%r15
	jnl _L_925
_L_338:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_22
.p2align 0x4
_L_925:
_L_333:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_334
_L_336:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_337
.p2align 0x4
.long 0x13
_L_337:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_334:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_335:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r14,%r15
	jmp _L_14
.p2align 0x4
_L_927:
_L_339:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp _L_join_4
.p2align 0x4
_L_928:
_L_340:
	movq $0x2,%r15
	jmp _L_14
.p2align 0x4
_L_929:
_L_341:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_335
.p2align 0x4
_L_931:
_L_344:
	movq (_globalObjptr+0x40)(%rip),%r14
	movq %r14,%r15
	jmp _L_14
.p2align 0x4
_L_932:
_L_345:
	movb $0x0,0x58(%rbp)
	jmp _L_54
.p2align 0x4
_L_938:
_L_372:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (_L_373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_373
.p2align 0x4
.long 0x1B
_L_373:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp _L_11
.p2align 0x4
_L_939:
_L_374:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_375
.p2align 0x4
.long 0x1C
_L_375:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp _L_10
.p2align 0x4
.long 0x6
_L_144:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl $0x64,0x10(%rbp)
_loop_13:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz _L_966
_L_145:
	movl (_gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x14(%rbp)
	testl %r13d,%r13d
	jnz _L_963
_L_146:
	movl $0x1,0x0(%r14)
	testl %r15d,%r15d
	jz _L_962
_L_147:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
_L_148:
	movl 0x10(%rbp),%ebx
	cmpl $0x0,%ebx
	setl %al
	movzbl %al,%eax
	jl _L_961
_L_149:
	negl %ebx
	movl $0x20,%ecx
	movl %eax,(_localWord32+0x0)(%rip)
.p2align 0x4,,0x7
_loop_14:
	movl %ebx,%eax
	movl $0xA,%edi
	cltd
	idivl %edi
	negl %edx
	movslq %edx,%r15
	cmpq $0x10,%r15
	jnb _L_151
_L_164:
	movq (_globalObjptr+0x3B0)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movslq %ecx,%r11
	cmpq %r14,%r11
	jnb _L_151
_L_166:
	movb %r13b,0x0(%r15,%r11,1)
	movl %ebx,%eax
	movl $0xA,%ebx
	cltd
	idivl %ebx
	testl %eax,%eax
	jz _L_943
_L_167:
	decl %ecx
	jo _L_941
_L_171:
	movl %eax,%ebx
	jmp _loop_14
.p2align 0x4
_L_941:
_L_168:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz _L_942
_L_169:
	movq $0x1,%r15
_L_153:
	movq 0x38(%rbp),%r13
	movl $0x0,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
_L_154:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	leaq _L_159(%rip),%r15
	movq %r15,0x0(%rbp)
	addq $0x20,%rbp
	leaq (_L_155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _exnMessage_0
.p2align 0x4
_L_942:
_L_170:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x1,%r15
	jmp _L_154
.p2align 0x4
_L_943:
_L_172:
	movl (_localWord32+0x0)(%rip),%r15d
	testl %r15d,%r15d
	jnz _L_956
_L_173:
_L_174:
	movslq %ecx,%r15
	movq %r15,0x40(%rbp)
	cmpq %r15,%r14
	jb _L_954
_L_175:
	subq %r15,%r14
	movq %r14,0x48(%rbp)
	jz _L_953
_L_176:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_177
.p2align 0x4
.long 0xA
_L_177:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x50(%rbp)
_L_join_0:
	movq 0x48(%rbp),%r9
	cmpq $0x5,%r9
	jl _L_951
_L_178:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%r8
	movq 0x18(%rbp),%rcx
	xorq %rdx,%rdx
	movq 0x50(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_179
.p2align 0x4
.long 0xB
_L_179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
_L_180:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jnz _L_182
_L_181:
	movq 0x38(%rbp),%r15
	movl $0x0,0x0(%r15)
_L_182:
	movq 0x48(%rbp),%rdx
	testq %rdx,%rdx
	jz _L_949
_L_183:
	addq $0x4,%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_948
_L_184:
	testq %rdx,%rdx
	jz _L_947
_L_185:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_186
.p2align 0x4
.long 0xB
_L_186:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
_L_join_1:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x4,%r9
	xorq %r8,%r8
	movq (_globalObjptr+0x170)(%rip),%rcx
	xorq %rdx,%rdx
	movq 0x18(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_187
.p2align 0x4
.long 0xC
_L_187:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%r9
	xorq %r8,%r8
	movq 0x50(%rbp),%rcx
	movq $0x4,%rdx
	movq 0x18(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_188
.p2align 0x4
.long 0xA
_L_188:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_189:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz _L_946
_L_190:
	incq %rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_945
_L_191:
	testq %rdx,%rdx
	jz _L_944
_L_192:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_193
.p2align 0x4
.long 0xA
_L_193:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x48(%rbp)
_L_join_2:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%r9
	xorq %r8,%r8
	movq 0x18(%rbp),%rcx
	xorq %rdx,%rdx
	movq 0x48(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_194
.p2align 0x4
.long 0xD
_L_194:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x1,%r9
	xorq %r8,%r8
	movq (_globalObjptr+0x338)(%rip),%rcx
	movq 0x40(%rbp),%rdx
	movq 0x48(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_195
.p2align 0x4
.long 0xD
_L_195:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x48(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_196:
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (_L_197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _print_3
.p2align 0x4
_L_944:
_L_205:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp _L_join_2
.p2align 0x4
_L_945:
_L_206:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x2,%r15
	jmp _L_154
.p2align 0x4
_L_946:
_L_207:
	movq (_globalObjptr+0x338)(%rip),%r15
	jmp _L_196
.p2align 0x4
_L_947:
_L_208:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp _L_join_1
.p2align 0x4
_L_948:
_L_209:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x2,%r15
	jmp _L_154
.p2align 0x4
_L_949:
_L_210:
	movq (_globalObjptr+0x170)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp _L_189
.p2align 0x4
_L_951:
_L_212:
	decq %r9
	xorq %r15,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
_loop_16:
	cmpq %r15,%r14
	jl _L_180
_L_213:
	movq %r15,%r13
	addq 0x40(%rbp),%r13
	movq 0x50(%rbp),%r11
	movq 0x18(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	jmp _loop_16
.p2align 0x4
_L_953:
_L_215:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp _L_join_0
.p2align 0x4
_L_954:
_L_151:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz _L_955
_L_152:
	movq $0x3,%r15
	jmp _L_153
.p2align 0x4
_L_955:
_L_163:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x3,%r15
	jmp _L_154
.p2align 0x4
_L_956:
_L_217:
	decl %ecx
	jo _L_168
_L_218:
	movslq %ecx,%r15
	cmpq %r14,%r15
	jnb _L_151
_L_220:
	movq 0x18(%rbp),%r13
	movb $0x7E,0x0(%r13,%r15,1)
	jmp _L_174
.p2align 0x4
_L_961:
_L_221:
	movl $0x20,%ecx
	movl %eax,(_localWord32+0x0)(%rip)
	jmp _loop_14
.p2align 0x4
_L_962:
_L_222:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq (_globalObjptr+0x40)(%rip),%r13
	movq %r13,%r15
	jmp _L_154
.p2align 0x4
_L_963:
_L_223:
	testl %r15d,%r15d
	jz _L_965
_L_224:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x21,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_225
.p2align 0x4
.long 0xE
_L_225:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
_loop_17:
	cmpq $0x21,%r15
	jnl _L_964
_L_227:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_17
.p2align 0x4
_L_964:
_L_226:
	movq %r14,0x18(%rbp)
	jmp _L_148
.p2align 0x4
_L_965:
_L_228:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r13
	movq (_globalObjptr+0x40)(%rip),%r11
	movq %r11,%r15
	xchgq %r13,%r14
	jmp _L_154
.p2align 0x4
_L_966:
_L_229:
	movq (_globalObjptr+0x3B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (_L_230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _print_3
.p2align 0x4
.long 0x1
_L_204:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (_globalObjptrNonRoot+0x0)(%rip),%r15
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	jmp _L_154
.p2align 0x4
.long 0x7
_L_155:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_156
_L_161:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_162
.p2align 0x4
.long 0x9
_L_162:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
_L_156:
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (_globalObjptr+0x68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x348)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (_print_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _concat_0
.p2align 0x4
.long 0x1
_L_159:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rbp,(_gcState+0x10)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x3A8)(%rip),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_160:
	movl $0x1,%r15d
	movl %r15d,%esi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r12,(_gcState+0x0)(%rip)
	call _MLton_halt
.p2align 0x4
.long 0x6
_L_197:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl $0x2FAF080,%ecx
.p2align 0x4,,0x7
_loop_15:
	testl %ecx,%ecx
	jz _L_969
_L_198:
	decl %ecx
	jo _L_968
_L_200:
	jmp _loop_15
.p2align 0x4
_L_968:
_L_199:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x1,%r15
	jmp _L_154
.p2align 0x4
_L_969:
_L_201:
	movl 0x10(%rbp),%r15d
	decl %r15d
	jo _L_970
_L_203:
	movl %r15d,0x10(%rbp)
	jmp _loop_13
.p2align 0x4
_L_970:
_L_202:
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq $0x1,%r15
	jmp _L_154
.p2align 0x4
.long 0xF
_L_230:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	leaq _L_232(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (_L_231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _exit_0
.p2align 0x4
.long 0x7
_print_2:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_157:
	movl $0x1,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (_L_158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _exit_0
.p2align 0x4
.long 0x8
_L_231:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x340)(%rip),%rdi
	xorq %rax,%rax
	call _MLton_bug
.p2align 0x4
.long 0x1
_L_232:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rbp,(_gcState+0x10)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x3C0)(%rip),%rdi
	xorq %rax,%rax
	call _Stdio_print
_L_233:
	movl $0x1,%r15d
	movl %r15d,%esi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r12,(_gcState+0x0)(%rip)
	call _MLton_halt
.p2align 0x4
.long 0x8
_L_158:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (_c_stackP+0x0)(%rip),%rsp
	movq (_globalObjptr+0x340)(%rip),%rdi
	xorq %rax,%rax
	call _MLton_bug
.text
.p2align 0x4
.globl _print_3
.private_extern _print_3
_print_3:
_L_376:
	movq (_gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(_gcState+0x18)(%rip)
	jb _L_563
_L_377:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_996
_L_378:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r11),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r11),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x24,%r14
	je _L_985
_L_531:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movl 0x0(%r13),%r10d
	movl %r10d,0x40(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movq %r9,0x48(%rbp)
	movl %r9d,%r13d
	movslq %r13d,%r14
	cmpq %r9,%r14
	jne _L_381
_L_533:
	addl %r10d,%r13d
	movl %r13d,0x44(%rbp)
	jo _L_983
_L_534:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movq %r10,0x50(%rbp)
	movl %r10d,%r11d
	movslq %r11d,%r14
	cmpq %r10,%r14
	jne _L_982
_L_536:
	cmpl %r11d,%r13d
	jnl _L_538
_L_539:
	decq %r9
	movq %r9,0x58(%rbp)
	xorq %r14,%r14
.p2align 0x4,,0x7
_loop_30:
	cmpq %r14,0x58(%rbp)
	jl _L_972
_L_540:
	movq 0x0(%rbp),%r13
	cmpb $0xA,0x0(%r13,%r14,1)
	je _L_971
_L_541:
	incq %r14
	jmp _loop_30
.p2align 0x4
_L_971:
_L_538:
	movq %r15,0x38(%rbp)
	leaq _L_510(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (_put_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _flushBuf_0
.p2align 0x4
_L_972:
_L_543:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_544
_L_561:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (_L_562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_562
.p2align 0x4
.long 0x2A
_L_562:
	addq $0xFFFFFFFFFFFFFF98,%rbp
_L_544:
	movslq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r14
	cmpq %r15,%r14
	jb _L_497
_L_545:
	movq 0x48(%rbp),%r13
	addq %r13,%r15
	cmpq %r15,%r14
	jb _L_978
_L_546:
	cmpq $0x5,%r13
	jl _L_975
_L_547:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_548
_L_551:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (_L_552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_552
.p2align 0x4
.long 0x29
_L_552:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
_L_548:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%r9
	xorq %r8,%r8
	movq 0x0(%rbp),%rcx
	movq 0x28(%rbp),%rdx
	movq 0x38(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_549
.p2align 0x4
.long 0x28
_L_549:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
_L_550:
	movq 0x30(%rbp),%r15
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
_L_500:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x24,%r14
	je _L_973
_L_507:
	movq %r15,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(_gcState+0x20)(%rip)
	jmp _flushBuf_0
.p2align 0x4
_L_973:
_L_501:
	movq %r15,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	leaq _L_503(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (_L_502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _flushBuf_0
.p2align 0x4
_L_975:
_L_553:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_31:
	cmpq %r15,0x58(%rbp)
	jl _L_976
_L_554:
	movq %r15,%r14
	addq 0x28(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r15,1),%r11b
	movb %r11b,0x0(%r13,%r14,1)
	incq %r15
	jmp _loop_31
.p2align 0x4
_L_976:
_L_555:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_550
_L_557:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_558
.p2align 0x4
.long 0x28
_L_558:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp _L_550
.p2align 0x4
_L_978:
_L_497:
	movq $0x3,%r15
_L_382:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	movq $0x3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq (_globalObjptr+0x3D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,(_globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(_gcState+0x20)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_982:
_L_381:
	movq (_globalObjptr+0x50)(%rip),%r15
	jmp _L_382
.p2align 0x4
_L_983:
_L_384:
	movq $0x1,%r15
	jmp _L_382
.p2align 0x4
_L_985:
_L_379:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq (_globalObjptr+0x58)(%rip),%r14
	movl 0x0(%r14),%r11d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movq %r10,0x38(%rbp)
	movl %r10d,%r14d
	movslq %r14d,%r9
	cmpq %r10,%r9
	jne _L_381
_L_383:
	addl %r11d,%r14d
	movl %r14d,0x40(%rbp)
	jo _L_384
_L_385:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movl %r9d,%r13d
	movslq %r13d,%r8
	cmpq %r9,%r8
	jne _L_381
_L_387:
	cmpl %r13d,%r14d
	jnl _L_992
_L_514:
	movslq %r11d,%r14
	movq %r14,0x28(%rbp)
	cmpq %r14,%r9
	jb _L_497
_L_515:
	addq %r10,%r14
	cmpq %r14,%r9
	jb _L_497
_L_516:
	cmpq $0x5,%r10
	jl _L_987
_L_517:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_518
_L_521:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_522+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_522
.p2align 0x4
.long 0x27
_L_522:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
_L_518:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%r9
	xorq %r8,%r8
	movq 0x0(%rbp),%rcx
	movq 0x28(%rbp),%rdx
	movq 0x30(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_519
.p2align 0x4
.long 0x26
_L_519:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
_L_520:
	movq (_globalObjptr+0x58)(%rip),%r15
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp _L_500
.p2align 0x4
_L_987:
_L_523:
	movq 0x38(%rbp),%r14
	decq %r14
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_29:
	cmpq %r15,%r14
	jl _L_988
_L_524:
	movq %r15,%r13
	addq 0x28(%rbp),%r13
	movq 0x30(%rbp),%r11
	movq 0x0(%rbp),%r9
	movb 0x0(%r9,%r15,1),%r10b
	movb %r10b,0x0(%r11,%r13,1)
	incq %r15
	jmp _loop_29
.p2align 0x4
_L_988:
_L_525:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_520
_L_527:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (_L_528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_528
.p2align 0x4
.long 0x26
_L_528:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp _L_520
.p2align 0x4
_L_992:
_L_388:
	movq %r15,0x38(%rbp)
	leaq _L_510(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (_put_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _flushBuf_0
.p2align 0x4
_L_996:
_L_563:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_564
.p2align 0x4
.long 0x23
_L_564:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp _L_378
.p2align 0x4
.long 0x1D
_put_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_389
_L_508:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_509
.p2align 0x4
.long 0x24
_L_509:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_389:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movl %r13d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r15
	cmpq %r13,%r15
	je _L_998
_L_390:
	movq (_globalObjptr+0x28)(%rip),%r15
	jmp _L_382
.p2align 0x4
_L_998:
_L_391:
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
_loop_23:
	movl 0x28(%rbp),%r15d
	movl 0x40(%rbp),%r14d
	cmpl %r14d,%r15d
	je _L_500
_L_392:
	subl %r15d,%r14d
	jo _L_384
_L_393:
	movslq %r15d,%r13
	movslq %r14d,%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r14
	cmpq %r13,%r14
	jb _L_497
_L_394:
	subq %r13,%r14
	cmpq %r15,%r14
	jb _L_497
_L_395:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz _L_1036
_L_396:
	incl (_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_1035
.p2align 0x4,,0x7
_L_397:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%rcx
	movl 0x28(%rbp),%edx
	movq 0x0(%rbp),%rsi
	movl $0x1,%r14d
	movl %r14d,%edi
	xorq %rax,%rax
	call _Posix_IO_writeChar8Vec
_L_398:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_1004
_L_399:
	movl (_gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz _L_1003
_L_400:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movq %rax,%r15
_x_0:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne _L_384
_L_402:
	movq 0x50(%rbp),%r15
	addq 0x0(%r15),%r13
	jo _L_384
_L_403:
	movq %r13,0x0(%r15)
	testl %r14d,%r14d
	jz _L_1000
_L_404:
	addl 0x28(%rbp),%r14d
	jo _L_384
_L_405:
	movl %r14d,0x28(%rbp)
	jmp _loop_23
.p2align 0x4
_L_1000:
_L_406:
	movq (_globalObjptr+0x48)(%rip),%r15
	jmp _L_382
.p2align 0x4
_L_1003:
_L_408:
	movq (_globalObjptr+0x40)(%rip),%r15
	jmp _L_382
.p2align 0x4
_L_1004:
_L_409:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_1034
.p2align 0x4,,0x7
_L_410:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_411:
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_408
_L_412:
	movl %eax,0x2C(%rbp)
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
_loop_24:
	cmpl $0x4,0x2C(%rbp)
	jne _L_1024
_L_437:
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_1018
_L_438:
	incl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_1017
.p2align 0x4,,0x7
_L_439:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%rcx
	movl 0x28(%rbp),%edx
	movq 0x0(%rbp),%rsi
	movl $0x1,%r14d
	movl %r14d,%edi
	xorq %rax,%rax
	call _Posix_IO_writeChar8Vec
_L_440:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_1006
_L_441:
	movl (_gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz _L_408
_L_442:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movq %rax,%r15
	jmp _x_0
.p2align 0x4
_L_1006:
_L_444:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_445
_L_471:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_472
.p2align 0x4
.long 0x20
_L_472:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_445:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_446:
	movl %eax,0x0(%rbp)
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_408
_L_447:
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_448
_L_468:
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_469
.p2align 0x4
.long 0x20
_L_469:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_448:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_449:
	movq %rax,0x8(%rbp)
	testq %rax,%rax
	jz _L_1013
_L_450:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_27:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_1007
_L_451:
	incl %ecx
	jmp _loop_27
.p2align 0x4
_L_1007:
_L_452:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_453
_L_465:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_466
.p2align 0x4
.long 0x1E
_L_466:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_453:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_1011
_L_454:
	testq %rdx,%rdx
	jz _L_1010
_L_455:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_456
.p2align 0x4
.long 0x1E
_L_456:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
_L_join_6:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_28:
	cmpq 0x28(%rbp),%r15
	jnl _L_1008
_L_462:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_28
.p2align 0x4
_L_1008:
_L_457:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_458
_L_460:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (_L_461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_461
.p2align 0x4
.long 0x1F
_L_461:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
_L_458:
	movq 0x30(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_459:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x0(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r14,%r15
	jmp _L_382
.p2align 0x4
_L_1010:
_L_463:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp _L_join_6
.p2align 0x4
_L_1011:
_L_431:
	movq $0x2,%r15
	jmp _L_382
.p2align 0x4
_L_1013:
_L_467:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_459
.p2align 0x4
_L_1017:
_L_473:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_474
.p2align 0x4
.long 0x21
_L_474:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp _L_439
.p2align 0x4
_L_1018:
_L_475:
	incl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_1023
.p2align 0x4,,0x7
_L_476:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%rcx
	movl 0x28(%rbp),%edx
	movq 0x0(%rbp),%rsi
	movl $0x1,%r14d
	movl %r14d,%edi
	xorq %rax,%rax
	call _Posix_IO_writeChar8Vec
_L_477:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_1020
_L_478:
	movl (_gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz _L_408
_L_479:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movq %rax,%r15
	jmp _x_0
.p2align 0x4
_L_1020:
_L_481:
	cmpq %r12,(_gcState+0x8)(%rip)
	jb _L_1022
.p2align 0x4,,0x7
_L_482:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_483:
	movl (_gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz _L_408
_L_484:
	movl %eax,0x2C(%rbp)
	decl %r15d
	movl %r15d,(_gcState+0x44)(%rip)
	jmp _loop_24
.p2align 0x4
_L_1022:
_L_486:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_487
.p2align 0x4
.long 0x21
_L_487:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp _L_482
.p2align 0x4
_L_1023:
_L_488:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_489
.p2align 0x4
.long 0x21
_L_489:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp _L_476
.p2align 0x4
_L_1024:
_L_413:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_414
_L_435:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_436
.p2align 0x4
.long 0x1E
_L_436:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_414:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x2C(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_415:
	movq %rax,0x0(%rbp)
	testq %rax,%rax
	jz _L_1031
_L_416:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_25:
	movslq %ecx,%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_1025
_L_417:
	incl %ecx
	jmp _loop_25
.p2align 0x4
_L_1025:
_L_418:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_419
_L_432:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_433
.p2align 0x4
.long 0x1E
_L_433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
_L_419:
	movq 0x8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_431
_L_420:
	testq %rdx,%rdx
	jz _L_1028
_L_421:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (_L_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_422
.p2align 0x4
.long 0x1E
_L_422:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
_L_join_5:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_26:
	cmpq 0x8(%rbp),%r15
	jnl _L_1026
_L_428:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_26
.p2align 0x4
_L_1026:
_L_423:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_424
_L_426:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (_L_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_427
.p2align 0x4
.long 0x1F
_L_427:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
_L_424:
	movq 0x30(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_425:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r14,%r15
	jmp _L_382
.p2align 0x4
_L_1028:
_L_429:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp _L_join_5
.p2align 0x4
_L_1031:
_L_434:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_425
.p2align 0x4
_L_1034:
_L_491:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_492
.p2align 0x4
.long 0x21
_L_492:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp _L_410
.p2align 0x4
_L_1035:
_L_493:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (_L_494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_494
.p2align 0x4
.long 0x21
_L_494:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp _L_397
.p2align 0x4
_L_1036:
_L_495:
	movq $0x5,%r15
	jmp _L_382
.p2align 0x4
.long 0x8
_L_510:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (_globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_511
_L_512:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_513
.p2align 0x4
.long 0x25
_L_513:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_511:
	movq 0x0(%rbp),%r15
	jmp _L_382
.p2align 0x4
.long 0x22
_L_502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(_gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8
_L_503:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (_globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_504
_L_505:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_506
.p2align 0x4
.long 0x23
_L_506:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
_L_504:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq $0x3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (_globalObjptr+0x3D8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,(_globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(_gcState+0x20)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl _flushBuf_0
.private_extern _flushBuf_0
_flushBuf_0:
_L_565:
	cmpq %rbp,(_gcState+0x18)(%rip)
	jnb _L_566
_L_654:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_655
.p2align 0x4
.long 0x2D
_L_655:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
_L_566:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movl 0x0(%r10),%ecx
	movl $0x0,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movslq %ecx,%r13
	cmpq %r13,%r15
	jb _L_650
_L_567:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	xorl %ebx,%ebx
.p2align 0x4,,0x7
_loop_32:
	cmpl %ecx,%ebx
	je _L_1077
_L_568:
	movl %ecx,%r9d
	subl %ebx,%r9d
	jo _L_569
_L_570:
	movslq %ebx,%r11
	movslq %r9d,%r8
	cmpq %r11,%r15
	jb _L_650
_L_571:
	movq %r15,%r10
	subq %r11,%r10
	cmpq %r8,%r10
	jb _L_1074
_L_572:
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%rsi
	movl 0x0(%rsi),%r11d
	testl %r11d,%r11d
	jnz _L_1073
_L_573:
	movl (_gcState+0x44)(%rip),%esi
	incl %esi
	movl %esi,(_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq %r8,%r11
	movl %ecx,(_localWord32+0x0)(%rip)
	movq %r11,%rcx
	movl %ebx,%edx
	movq %r14,%r11
	movq %r11,%rsi
	movl $0x1,%r11d
	movl %r11d,%edi
	xorq %rax,%rax
	xchgq %r8,%r12
	xchgq %r9,%r14
	movq %r8,(_gcState+0x0)(%rip)
	movq %r9,(_localObjptr+0x8)(%rip)
	call _Posix_IO_writeChar8Arr
_L_574:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_1049
_L_575:
	movl (_gcState+0x44)(%rip),%r9d
	testl %r9d,%r9d
	jz _L_1048
_L_576:
	decl %r9d
	movl %r9d,(_gcState+0x44)(%rip)
	movq (_gcState+0x0)(%rip),%r9
	xchgq %r9,%r12
	movq %rax,%r11
	movq (_localObjptr+0x8)(%rip),%r10
	movl (_localWord32+0x0)(%rip),%ecx
	xchgq %r14,%r15
_x_1:
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne _L_569
_L_578:
	addq 0x0(%r15),%r8
	jo _L_569
_L_579:
	movq %r8,0x0(%r15)
	testl %r9d,%r9d
	jz _L_1045
_L_580:
	addl %ebx,%r9d
	jo _L_1044
_L_581:
	movq %r14,%r15
	movq %r10,%r14
	movl %r9d,%ebx
	jmp _loop_32
.p2align 0x4
_L_1044:
_L_569:
	movq $0x1,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1045:
_L_582:
	movq (_globalObjptr+0x48)(%rip),%r15
	movq %r15,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1048:
	movq (_gcState+0x0)(%rip),%r12
_L_584:
	movq (_globalObjptr+0x40)(%rip),%r15
	movq %r15,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1049:
_L_585:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_586:
	movl (_gcState+0x44)(%rip),%r9d
	testl %r9d,%r9d
	jz _L_1072
_L_587:
	movl %eax,0x0(%rbp)
	decl %r9d
	movl %r9d,(_gcState+0x44)(%rip)
	movq (_gcState+0x0)(%rip),%r9
	xchgq %r9,%r12
	movq %r9,%r10
	movq (_localObjptr+0x8)(%rip),%r11
	movl (_localWord32+0x0)(%rip),%ecx
	xchgq %r14,%r15
.p2align 0x4,,0x7
_loop_33:
	cmpl $0x4,0x0(%rbp)
	jne _L_1064
_L_609:
	movl (_gcState+0x44)(%rip),%r9d
	testl %r9d,%r9d
	jnz _L_1053
_L_638:
	incl %r9d
	movl %r9d,(_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq %r10,%r8
	movl %ecx,(_localWord32+0x0)(%rip)
	movq %r8,%rcx
	movl %ebx,%edx
	movq %r11,%rsi
	movl $0x1,%r8d
	movl %r8d,%edi
	xorq %rax,%rax
	xchgq %r11,%r12
	xchgq %r10,%r12
	movq %r12,(_localWord64+0x10)(%rip)
	movl %r9d,%r12d
	movq %r10,(_localObjptr+0x8)(%rip)
	movq %r11,(_gcState+0x0)(%rip)
	call _Posix_IO_writeChar8Arr
_L_639:
	movq %rax,%r9
	movq %rax,(_cReturnTemp+0x0)(%rip)
	cmpq $0xFFFFFFFFFFFFFFFF,%r9
	jne _L_1051
_L_643:
	xorq %rax,%rax
	xchgq %r9,%r13
	movq %r9,(_localObjptr+0x0)(%rip)
	call _Posix_Error_getErrno
_L_644:
	testl %r12d,%r12d
	jz _L_1050
_L_645:
	movl %eax,0x0(%rbp)
	decl %r12d
	movl %r12d,(_gcState+0x44)(%rip)
	movq (_gcState+0x0)(%rip),%r12
	movq (_localObjptr+0x0)(%rip),%r9
	xchgq %r9,%r13
	movq (_localObjptr+0x8)(%rip),%r11
	movq (_localWord64+0x10)(%rip),%r10
	movl (_localWord32+0x0)(%rip),%ecx
	jmp _loop_33
.p2align 0x4
_L_1050:
	movq (_gcState+0x0)(%rip),%r15
	movq %r15,%r12
	jmp _L_584
.p2align 0x4
_L_1051:
_L_640:
	testl %r12d,%r12d
	jz _L_1052
_L_641:
	decl %r12d
	movl %r12d,(_gcState+0x44)(%rip)
	movq (_gcState+0x0)(%rip),%r12
	movq %r9,%r11
	movq (_localObjptr+0x8)(%rip),%r10
	movl (_localWord32+0x0)(%rip),%ecx
	jmp _x_1
.p2align 0x4
_L_1052:
	movq (_gcState+0x0)(%rip),%r15
	movq %r15,%r12
	jmp _L_584
.p2align 0x4
_L_1053:
_L_610:
	incl %r9d
	movl %r9d,(_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movl %ecx,(_localWord32+0x0)(%rip)
	movq %r10,%rcx
	movl %ebx,%edx
	movq %r11,%rsi
	movl $0x1,%r8d
	movl %r8d,%edi
	xorq %rax,%rax
	xchgl %r9d,%ebx
	xchgq %r11,%r13
	movl %r9d,(_localWord32+0x4)(%rip)
	movq %r11,(_localObjptr+0x0)(%rip)
	call _Posix_IO_writeChar8Arr
_L_611:
	cmpq $0xFFFFFFFFFFFFFFFF,%rax
	je _L_1055
_L_612:
	testl %ebx,%ebx
	jz _L_584
_L_613:
	decl %ebx
	movl %ebx,(_gcState+0x44)(%rip)
	movq %rax,%r11
	movq %r13,%r10
	movq (_localObjptr+0x0)(%rip),%r13
	movl (_localWord32+0x0)(%rip),%ecx
	movl (_localWord32+0x4)(%rip),%ebx
	jmp _x_1
.p2align 0x4
_L_1055:
_L_615:
	movq (_c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call _Posix_Error_getErrno
_L_616:
	movl %eax,0x0(%rbp)
	testl %ebx,%ebx
	jz _L_584
_L_617:
	decl %ebx
	movl %ebx,(_gcState+0x44)(%rip)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_618
_L_635:
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (_L_636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_636
.p2align 0x4
.long 0x2C
_L_636:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
_L_618:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_619:
	movq %rax,0x8(%rbp)
	testq %rax,%rax
	jz _L_1061
_L_620:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_36:
	movslq %ecx,%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_1056
_L_621:
	incl %ecx
	jmp _loop_36
.p2align 0x4
_L_1056:
_L_622:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_1060
_L_623:
	testq %rdx,%rdx
	jz _L_1059
_L_624:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_625
.p2align 0x4
.long 0x14
_L_625:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
_L_join_8:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_37:
	cmpq 0x10(%rbp),%r15
	jnl _L_1057
_L_631:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_37
.p2align 0x4
_L_1057:
_L_626:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_627
_L_629:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_630
.p2align 0x4
.long 0x2B
_L_630:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
_L_627:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_628:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x0(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movq %r14,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1059:
_L_632:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp _L_join_8
.p2align 0x4
_L_1060:
_L_605:
	movq $0x2,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1061:
_L_634:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_628
.p2align 0x4
_L_1064:
_L_588:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_589
_L_607:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (_L_608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_608
.p2align 0x4
.long 0x2C
_L_608:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
_L_589:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%edi
	xorq %rax,%rax
	call _Posix_Error_strError
_L_590:
	movq %rax,0x8(%rbp)
	testq %rax,%rax
	jz _L_1070
_L_591:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
_loop_34:
	movslq %ecx,%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz _L_1065
_L_592:
	incl %ecx
	jmp _loop_34
.p2align 0x4
_L_1065:
_L_593:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja _L_605
_L_594:
	testq %rdx,%rdx
	jz _L_1068
_L_595:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_596
.p2align 0x4
.long 0x14
_L_596:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
_L_join_7:
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_35:
	cmpq 0x10(%rbp),%r15
	jnl _L_1066
_L_602:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_35
.p2align 0x4
_L_1066:
_L_597:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_598
_L_600:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_601
.p2align 0x4
.long 0x2B
_L_601:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
_L_598:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
_L_599:
	movq $0x3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x0(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movq %r14,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1068:
_L_603:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp _L_join_7
.p2align 0x4
_L_1070:
_L_606:
	movq (_globalObjptr+0x3C8)(%rip),%r15
	jmp _L_599
.p2align 0x4
_L_1072:
	movq (_gcState+0x0)(%rip),%r12
	jmp _L_584
.p2align 0x4
_L_1073:
_L_648:
	movq $0x5,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1074:
_L_650:
	movq $0x3,(_globalObjptrNonRoot+0x0)(%rip)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1077:
_L_652:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl _exnMessage_0
.private_extern _exnMessage_0
_exnMessage_0:
_L_656:
	cmpq %rbp,(_gcState+0x18)(%rip)
	jnb _L_657
_L_715:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_716
.p2align 0x4
.long 0x2D
_L_716:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
_L_657:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je _L_665
_L_658:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
_L_659:
	cmpq $0x1,%r14
	je _L_1098
	cmpq $0x2,%r14
	je _L_1090
_L_661:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz _L_662
_L_675:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1E,%r11
	je _L_1088
_L_662:
	cmpq $0x1,%r15
	je _L_1080
_L_663:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp _L_659
.p2align 0x4
_L_1080:
_L_665:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je _L_1087
	cmpq $0x2,%r15
	je _L_1086
	cmpq $0x3,%r15
	je _L_1085
	cmpq $0x5,%r15
	je _L_1084
_L_666:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1C,%r14
	je _L_1083
	cmpq $0x1D,%r14
	je _L_1082
	cmpq $0x1E,%r14
	je _L_1081
_L_667:
	movq (_globalObjptr+0x3E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1081:
_L_670:
	movq (_globalObjptr+0x370)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1082:
_L_669:
	movq (_globalObjptr+0x368)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1083:
_L_668:
	movq (_globalObjptr+0x360)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1084:
_L_674:
	movq (_globalObjptr+0x390)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1085:
_L_673:
	movq (_globalObjptr+0x388)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1086:
_L_672:
	movq (_globalObjptr+0x380)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1087:
_L_671:
	movq (_globalObjptr+0x378)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1088:
_L_676:
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (_L_677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _exnMessage_0
.p2align 0x4
_L_1090:
_L_692:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz _L_693
_L_696:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1D,%r13
	je _L_1092
_L_693:
	cmpq $0x1,%r15
	je _L_665
_L_694:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp _L_659
.p2align 0x4
_L_1092:
_L_697:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (_globalObjptr+0x18)(%rip),%r15
	movq (_globalObjptr+0x10)(%rip),%r14
	movq %r14,0x0(%rbp)
.p2align 0x4,,0x7
_L_698:
	movq 0x0(%rbp),%r14
	cmpl %ecx,0x0(%r14)
	je _L_1095
_L_699:
	cmpq $0x1,%r15
	je _L_1093
_L_700:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x0(%rbp)
	jmp _L_698
.p2align 0x4
_L_1093:
_L_701:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_702
_L_708:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_709
.p2align 0x4
.long 0x32
_L_709:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
_L_702:
	movq (_globalObjptr+0x408)(%rip),%r15
_L_703:
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x20)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (_globalObjptr+0x410)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (_L_704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _concat_0
.p2align 0x4
_L_1095:
_L_710:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_711
_L_712:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_713
.p2align 0x4
.long 0x2D
_L_713:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
_L_711:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp _L_703
.p2align 0x4
_L_1098:
_L_682:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz _L_683
_L_686:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1C,%r13
	je _L_1100
_L_683:
	cmpq $0x1,%r15
	je _L_665
_L_684:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp _L_659
.p2align 0x4
_L_1100:
_L_687:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_688
_L_689:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (_L_690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_690
.p2align 0x4
.long 0x30
_L_690:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
_L_688:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x400)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp _concat_0
.p2align 0x4
.long 0x2E
_L_677:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_678
_L_679:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_680
.p2align 0x4
.long 0x2F
_L_680:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
_L_678:
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x3E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x3F0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x3F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp _concat_0
.p2align 0x4
.long 0x31
_L_704:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_705
_L_706:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (_L_707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_707
.p2align 0x4
.long 0x2D
_L_707:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
_L_705:
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (_globalObjptr+0x418)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp _concat_0
.text
.p2align 0x4
.globl _concat_0
.private_extern _concat_0
_concat_0:
_L_717:
	cmpq %rbp,(_gcState+0x18)(%rip)
	jnb _L_718
_L_742:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (_L_743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_743
.p2align 0x4
.long 0x30
_L_743:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
_L_718:
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je _L_1115
_L_719:
	movq 0x8(%r11),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je _L_1114
_L_720:
	xorq %r14,%r14
.p2align 0x4,,0x7
_L_721:
	addq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jo _L_1113
_L_723:
	cmpq $0x1,%r13
	je _L_1107
_L_724:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp _L_721
.p2align 0x4
_L_1107:
_L_725:
	cmpq $0x7FFFFFFF,%r14
	ja _L_1112
_L_726:
	testq %r14,%r14
	jz _L_1111
_L_727:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (_L_728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_728
.p2align 0x4
.long 0x33
_L_728:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %rax,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq $0x0,0x10(%rbp)
.p2align 0x4,,0x7
_L_729:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x5,%r13
	jnl _L_1110
_L_735:
	decq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
_loop_38:
	cmpq %r14,%r13
	jl _L_1108
_L_736:
	movq %r14,%r11
	addq 0x10(%rbp),%r11
	movq 0x8(%rbp),%r10
	movb 0x0(%r15,%r14,1),%r9b
	movb %r9b,0x0(%r10,%r11,1)
	incq %r14
	jmp _loop_38
.p2align 0x4
_L_1108:
.p2align 0x4,,0x7
_L_732:
	movq 0x18(%rbp),%r15
	addq 0x10(%rbp),%r15
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je _L_1109
_L_733:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp _L_729
.p2align 0x4
_L_1109:
_L_734:
	movq 0x8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1110:
_L_730:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq %r13,%r9
	xorq %r8,%r8
	movq %r15,%rcx
	movq 0x10(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_731
.p2align 0x4
.long 0x23
_L_731:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp _L_732
.p2align 0x4
_L_1111:
_L_738:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq (_globalObjptr+0x78)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq $0x0,0x10(%rbp)
	jmp _L_729
.p2align 0x4
_L_1112:
_L_739:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1113:
_L_722:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1114:
_L_740:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1115:
_L_741:
	movq (_globalObjptr+0x420)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl _exit_0
.private_extern _exit_0
_exit_0:
_L_744:
	movq (_gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(_gcState+0x18)(%rip)
	jnb _L_745
_L_836:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (_L_837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_837
.p2align 0x4
.long 0x3B
_L_837:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
_L_745:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz _L_1145
_L_746:
	movl $0x1,0x0(%r15)
	movl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	setl %al
	movzbl %al,%eax
	movl %eax,0x4(%rbp)
	jl _L_1144
_L_747:
	cmpl $0x100,%r14d
	jnl _L_1122
_L_801:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je _L_816
_L_802:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
_L_803:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	jne _L_1118
.p2align 0x4,,0x7
_L_813:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je _L_1117
_L_814:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp _L_803
.p2align 0x4
_L_1117:
_L_816:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%esi
	movq %rbp,(_gcState+0x10)(%rip)
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r12,(_gcState+0x0)(%rip)
	call _MLton_halt
.p2align 0x4
_L_1118:
_L_804:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_805
_L_830:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_831
.p2align 0x4
.long 0x3A
_L_831:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_805:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
_L_806:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x24,%r15
	je _L_1119
_L_822:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	leaq _L_827(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (_L_823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _flushBuf_0
.p2align 0x4
_L_1119:
_L_807:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	leaq _L_819(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (_gcState+0x558)(%rip),%r15
	movq %r15,(_gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (_L_808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _flushBuf_0
.p2align 0x4
_L_1122:
	movq %r11,%r14
_L_749:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movl (_gcState+0x44)(%rip),%r14d
	incl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movl 0x0(%r13),%r11d
	movl %r11d,0x20(%rbp)
	testl %r11d,%r11d
	jnz _L_1140
_L_750:
	movl $0x1,0x0(%r13)
	testl %r14d,%r14d
	jz _L_1139
_L_751:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movl 0x4(%rbp),%r14d
	testl %r14d,%r14d
	jz _L_1138
_L_791:
	movq %r15,0x28(%rbp)
	movl $0x20,%ebx
	movl 0x0(%rbp),%ecx
.p2align 0x4,,0x7
_loop_39:
	movl %ecx,%eax
	movl $0xA,%edi
	cltd
	idivl %edi
	negl %edx
	movslq %edx,%r15
	cmpq $0x10,%r15
	jnb _L_755
_L_758:
	movq (_globalObjptr+0x3B0)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb _L_755
_L_760:
	movb %r13b,0x0(%r15,%r11,1)
	movl %ecx,%eax
	movl $0xA,%ecx
	cltd
	idivl %ecx
	testl %eax,%eax
	jz _L_1125
_L_761:
	decl %ebx
	jo _L_1123
_L_762:
	movl %eax,%ecx
	jmp _loop_39
.p2align 0x4
_L_1123:
_L_755:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz _L_1124
_L_756:
	movq 0x8(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1124:
_L_757:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1125:
_L_763:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz _L_765
_L_787:
	decl %ebx
	jo _L_755
_L_788:
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb _L_755
_L_790:
	movq 0x28(%rbp),%r13
	movb $0x7E,0x0(%r13,%r15,1)
_L_765:
	movslq %ebx,%r15
	movq %r15,0x0(%rbp)
	cmpq %r15,%r14
	jb _L_755
_L_766:
	subq %r15,%r14
	movq %r14,0x30(%rbp)
	jz _L_1131
_L_767:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (_L_768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_768
.p2align 0x4
.long 0x34
_L_768:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
_L_join_9:
	cmpq $0x5,0x30(%rbp)
	jl _L_1128
_L_769:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_770
_L_777:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (_L_778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_778
.p2align 0x4
.long 0x37
_L_778:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
_L_770:
	movq (_c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%r9
	movq 0x0(%rbp),%r8
	movq 0x28(%rbp),%rcx
	xorq %rdx,%rdx
	movq 0x38(%rbp),%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (_L_771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayCopy
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_771
.p2align 0x4
.long 0x35
_L_771:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
_L_772:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz _L_774
_L_773:
	movq 0x8(%rbp),%r15
	movl $0x0,0x0(%r15)
_L_774:
	movq $0x4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (_globalObjptr+0x60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (_globalObjptr+0x428)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (_L_775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp _concat_0
.p2align 0x4
_L_1128:
_L_779:
	movq 0x30(%rbp),%r14
	decq %r14
	xorq %r15,%r15
.p2align 0x4,,0x7
_loop_40:
	cmpq %r15,%r14
	jl _L_1129
_L_780:
	movq %r15,%r13
	addq 0x0(%rbp),%r13
	movq 0x38(%rbp),%r11
	movq 0x28(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	jmp _loop_40
.p2align 0x4
_L_1129:
_L_781:
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_772
_L_783:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (_L_784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_784
.p2align 0x4
.long 0x35
_L_784:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp _L_772
.p2align 0x4
_L_1131:
_L_785:
	movq (_globalObjptr+0x78)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp _L_join_9
.p2align 0x4
_L_1138:
_L_753:
	movq %r15,0x28(%rbp)
	movl 0x0(%rbp),%ecx
	negl %ecx
	movl $0x20,%ebx
	jmp _loop_39
.p2align 0x4
_L_1139:
_L_792:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1140:
_L_793:
	testl %r14d,%r14d
	jz _L_1143
_L_794:
	decl %r14d
	movl %r14d,(_gcState+0x44)(%rip)
	movq (_c_stackP+0x0)(%rip),%rsp
	movq $0x15,%rcx
	movq $0x21,%rdx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_arrayAllocate
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_795
.p2align 0x4
.long 0x38
_L_795:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
_loop_41:
	cmpq $0x21,%r15
	jnl _L_1141
_L_799:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp _loop_41
.p2align 0x4
_L_1141:
_L_796:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz _L_1142
_L_798:
	movq %r14,0x28(%rbp)
	movl $0x20,%ebx
	movl 0x0(%rbp),%ecx
	jmp _loop_39
.p2align 0x4
_L_1142:
	movq %r14,%r15
	jmp _L_753
.p2align 0x4
_L_1143:
_L_800:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
_L_1144:
	movq %r11,%r14
	jmp _L_749
.p2align 0x4
_L_1145:
_L_835:
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x39
_L_823:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_810
_L_825:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_826
.p2align 0x4
.long 0x3A
_L_826:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
_L_810:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je _L_813
_L_811:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp _L_806
.p2align 0x4
.long 0x8
_L_827:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je _L_816
_L_828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp _L_803
.p2align 0x4
.long 0x39
_L_808:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(_gcState+0x8)(%rip)
	jnb _L_810
_L_817:
	movq (_c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq _gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (_L_818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(_gcState+0x10)(%rip)
	movq %r12,(_gcState+0x0)(%rip)
	call _GC_collect
	movq (_gcState+0x0)(%rip),%r12
	movq (_gcState+0x10)(%rip),%rbp
	jmp _L_818
.p2align 0x4
.long 0x3A
_L_818:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp _L_810
.p2align 0x4
.long 0x8
_L_819:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je _L_816
_L_820:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp _L_803
.p2align 0x4
.long 0x36
_L_775:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (_gcState+0x558)(%rip),%rbp
	addq (_gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
